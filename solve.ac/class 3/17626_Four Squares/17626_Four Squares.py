# 라그랑주 네 제곱수 정리
# 자신의 수에서 그보다 작은 수의 제곱수를 뺀 것의 최소를 구하고 거기에 한개를 더해주면 된다.
# - 다이나믹 프로그래밍 유형의 문제입니다.
# - 자연수 n을 최소 개수의 제곱수 합의 개수로 표현하면 다음과 같습니다.
#   - 1 -> 1
#   - 2 -> 2
#   - 3 -> 3
#   - 4 -> 1
#   - 5 -> 2
#   - 6 -> 3
#   - 7 -> 4
#   - 8 -> 1
#   - 9 -> 1
#   - 10 -> 2
#   - 11 -> 3
#   - 12 -> 4
#   - 13 -> 5
#   - 14 -> 6
#   - 15 -> 7
#   - 16 -> 1
# - 이를 통해 점화식을 이끌어 낼 수 있습니다.
# - f(n) = f(n - m * m ) + 1
#   - 이 식을 구현하는게 문제를 중요 부분이자, 어렵다고 생각합니다.
# - 이러한 식을 이용해 반복문을 구현해 최솟값을 dp 배열에 할당하면 됩니다
N = int(input())
dp = [0, 1]
for i in range(2, N + 1):
    target = int(1e9)
    # 제곱확인
    for j in range(1, 50001):
        # 현재 수의 제곱이 i보다 크다면 멈춘다.
        if j ** 2 > i:
            break
        target = min(target, dp[i - (j ** 2)])
    dp.append(target + 1)
print(dp[N])
